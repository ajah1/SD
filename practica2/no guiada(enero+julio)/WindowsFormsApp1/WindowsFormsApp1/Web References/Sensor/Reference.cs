//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SDJulio.Sensor {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SensorSoap11Binding", Namespace="http://master")]
    public partial class Sensor : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LeerDatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHumedadOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTemperaturaOperationCompleted;
        
        private System.Threading.SendOrPostCallback getActuadorOperationCompleted;
        
        private System.Threading.SendOrPostCallback escribirFicheroOperationCompleted;
        
        private System.Threading.SendOrPostCallback isOkeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback getClienteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Sensor() {
            this.Url = global::SDJulio.Properties.Settings.Default.SDJulio_WebReference_Sensor;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LeerDatoCompletedEventHandler LeerDatoCompleted;
        
        /// <remarks/>
        public event getHumedadCompletedEventHandler getHumedadCompleted;
        
        /// <remarks/>
        public event getTemperaturaCompletedEventHandler getTemperaturaCompleted;
        
        /// <remarks/>
        public event getActuadorCompletedEventHandler getActuadorCompleted;
        
        /// <remarks/>
        public event escribirFicheroCompletedEventHandler escribirFicheroCompleted;
        
        /// <remarks/>
        public event isOkeyCompletedEventHandler isOkeyCompleted;
        
        /// <remarks/>
        public event getClienteCompletedEventHandler getClienteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:LeerDato", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string LeerDato([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string dato, int p_indice, [System.Xml.Serialization.XmlIgnoreAttribute()] bool p_indiceSpecified) {
            object[] results = this.Invoke("LeerDato", new object[] {
                        dato,
                        p_indice,
                        p_indiceSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LeerDatoAsync(string dato, int p_indice, bool p_indiceSpecified) {
            this.LeerDatoAsync(dato, p_indice, p_indiceSpecified, null);
        }
        
        /// <remarks/>
        public void LeerDatoAsync(string dato, int p_indice, bool p_indiceSpecified, object userState) {
            if ((this.LeerDatoOperationCompleted == null)) {
                this.LeerDatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeerDatoOperationCompleted);
            }
            this.InvokeAsync("LeerDato", new object[] {
                        dato,
                        p_indice,
                        p_indiceSpecified}, this.LeerDatoOperationCompleted, userState);
        }
        
        private void OnLeerDatoOperationCompleted(object arg) {
            if ((this.LeerDatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeerDatoCompleted(this, new LeerDatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getHumedad", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getHumedad(int i, [System.Xml.Serialization.XmlIgnoreAttribute()] bool iSpecified, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getHumedad", new object[] {
                        i,
                        iSpecified});
            @return = ((int)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getHumedadAsync(int i, bool iSpecified) {
            this.getHumedadAsync(i, iSpecified, null);
        }
        
        /// <remarks/>
        public void getHumedadAsync(int i, bool iSpecified, object userState) {
            if ((this.getHumedadOperationCompleted == null)) {
                this.getHumedadOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHumedadOperationCompleted);
            }
            this.InvokeAsync("getHumedad", new object[] {
                        i,
                        iSpecified}, this.getHumedadOperationCompleted, userState);
        }
        
        private void OngetHumedadOperationCompleted(object arg) {
            if ((this.getHumedadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHumedadCompleted(this, new getHumedadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getTemperatura", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getTemperatura(int i, [System.Xml.Serialization.XmlIgnoreAttribute()] bool iSpecified, out int @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified) {
            object[] results = this.Invoke("getTemperatura", new object[] {
                        i,
                        iSpecified});
            @return = ((int)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void getTemperaturaAsync(int i, bool iSpecified) {
            this.getTemperaturaAsync(i, iSpecified, null);
        }
        
        /// <remarks/>
        public void getTemperaturaAsync(int i, bool iSpecified, object userState) {
            if ((this.getTemperaturaOperationCompleted == null)) {
                this.getTemperaturaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTemperaturaOperationCompleted);
            }
            this.InvokeAsync("getTemperatura", new object[] {
                        i,
                        iSpecified}, this.getTemperaturaOperationCompleted, userState);
        }
        
        private void OngetTemperaturaOperationCompleted(object arg) {
            if ((this.getTemperaturaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTemperaturaCompleted(this, new getTemperaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getActuador", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getActuador(int i, [System.Xml.Serialization.XmlIgnoreAttribute()] bool iSpecified) {
            object[] results = this.Invoke("getActuador", new object[] {
                        i,
                        iSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getActuadorAsync(int i, bool iSpecified) {
            this.getActuadorAsync(i, iSpecified, null);
        }
        
        /// <remarks/>
        public void getActuadorAsync(int i, bool iSpecified, object userState) {
            if ((this.getActuadorOperationCompleted == null)) {
                this.getActuadorOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetActuadorOperationCompleted);
            }
            this.InvokeAsync("getActuador", new object[] {
                        i,
                        iSpecified}, this.getActuadorOperationCompleted, userState);
        }
        
        private void OngetActuadorOperationCompleted(object arg) {
            if ((this.getActuadorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getActuadorCompleted(this, new getActuadorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:escribirFichero", RequestNamespace="http://master", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void escribirFichero([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string p_dato, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string p_valor, int p_indice, [System.Xml.Serialization.XmlIgnoreAttribute()] bool p_indiceSpecified) {
            this.Invoke("escribirFichero", new object[] {
                        p_dato,
                        p_valor,
                        p_indice,
                        p_indiceSpecified});
        }
        
        /// <remarks/>
        public void escribirFicheroAsync(string p_dato, string p_valor, int p_indice, bool p_indiceSpecified) {
            this.escribirFicheroAsync(p_dato, p_valor, p_indice, p_indiceSpecified, null);
        }
        
        /// <remarks/>
        public void escribirFicheroAsync(string p_dato, string p_valor, int p_indice, bool p_indiceSpecified, object userState) {
            if ((this.escribirFicheroOperationCompleted == null)) {
                this.escribirFicheroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnescribirFicheroOperationCompleted);
            }
            this.InvokeAsync("escribirFichero", new object[] {
                        p_dato,
                        p_valor,
                        p_indice,
                        p_indiceSpecified}, this.escribirFicheroOperationCompleted, userState);
        }
        
        private void OnescribirFicheroOperationCompleted(object arg) {
            if ((this.escribirFicheroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.escribirFicheroCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:isOkey", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string isOkey() {
            object[] results = this.Invoke("isOkey", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void isOkeyAsync() {
            this.isOkeyAsync(null);
        }
        
        /// <remarks/>
        public void isOkeyAsync(object userState) {
            if ((this.isOkeyOperationCompleted == null)) {
                this.isOkeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisOkeyOperationCompleted);
            }
            this.InvokeAsync("isOkey", new object[0], this.isOkeyOperationCompleted, userState);
        }
        
        private void OnisOkeyOperationCompleted(object arg) {
            if ((this.isOkeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isOkeyCompleted(this, new isOkeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCliente", RequestNamespace="http://master", ResponseNamespace="http://master", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getCliente(int i, [System.Xml.Serialization.XmlIgnoreAttribute()] bool iSpecified) {
            object[] results = this.Invoke("getCliente", new object[] {
                        i,
                        iSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getClienteAsync(int i, bool iSpecified) {
            this.getClienteAsync(i, iSpecified, null);
        }
        
        /// <remarks/>
        public void getClienteAsync(int i, bool iSpecified, object userState) {
            if ((this.getClienteOperationCompleted == null)) {
                this.getClienteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetClienteOperationCompleted);
            }
            this.InvokeAsync("getCliente", new object[] {
                        i,
                        iSpecified}, this.getClienteOperationCompleted, userState);
        }
        
        private void OngetClienteOperationCompleted(object arg) {
            if ((this.getClienteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getClienteCompleted(this, new getClienteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LeerDatoCompletedEventHandler(object sender, LeerDatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LeerDatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LeerDatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getHumedadCompletedEventHandler(object sender, getHumedadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHumedadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHumedadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getTemperaturaCompletedEventHandler(object sender, getTemperaturaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTemperaturaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTemperaturaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int @return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getActuadorCompletedEventHandler(object sender, getActuadorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getActuadorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getActuadorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void escribirFicheroCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void isOkeyCompletedEventHandler(object sender, isOkeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isOkeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isOkeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getClienteCompletedEventHandler(object sender, getClienteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getClienteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getClienteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591